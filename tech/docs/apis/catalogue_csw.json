{"openapi": "3.0.2", "info": {"contact": {"email": "info@isric.org", "name": "ISRIC info desk", "url": "https://isric.org"}, "version": "3.0-dev", "title": "Soilwise Soil Info hub", "description": "SoilWise will provide an integrated and actionable access point to scattered and heterogeneous soil data and knowledge in Europe, making them FAIR (Findable, Accessible, Interoperable and Reusable) and improve trust, willingness, and ability to share and re-use soil data and knowledge. In three project development cycles, co-creation and co-validation by multi-stakeholder groups are the centre of project activities. SoilWise recognises existing workflows and repositories for specific user needs and aims to work with them to enhance their discoverability, approachability and interconnection. An open, modular, scalable and extensible knowledge and data repository building on existing and new technologies will be provided while respecting data ownership, access policies and privacy. AI- and ML- techniques will be employed to interlink scattered data and knowledge, automatise the processes, infer new knowledge and increase FAIRness. SoilWise applies infrastructure thinking instead of project thinking to design a repository for at least a decade to support EUSO evolvement accordingly. <br><br>This is an early prototype of the repository, deployed with the goal to generate feedback to improve the software and content in upcoming iterations. Please provide your feedback via <a href='https://github.com/soilwise-he/dashboard/discussions/categories/q-a'>Github</a>"}, "components": {"parameters": {"bbox": {"name": "bbox", "in": "query", "description": "Only records that have a geometry that intersects the bounding box are\nselected. The bounding box is provided as four or six numbers,\ndepending on whether the coordinate reference system includes a\nvertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1\n* Lower left corner, coordinate axis 2\n* Minimum value, coordinate axis 3 (optional)\n* Upper right corner, coordinate axis 1\n* Upper right corner, coordinate axis 2\n* Maximum value, coordinate axis 3 (optional)\n\nThe coordinate reference system of the values is WGS 84 long/lat\n(http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different\ncoordinate reference system is specified in the parameter `bbox-crs`.\n\nFor WGS 84 longitude/latitude the values are in most cases the sequence\nof minimum longitude, minimum latitude, maximum longitude and maximum\nlatitude.\n\nHowever, in cases where the box spans the antimeridian the first value\n(west-most box edge) is larger than the third value (east-most box\nedge).\n\nIf the vertical axis is included, the third and the sixth number are\nthe bottom and the top of the 3-dimensional bounding box.\n\nIf a record has multiple spatial geometry properties, it is the\ndecision of the server whether only a single spatial geometry property\nis used to determine the extent or all relevant geometries.", "required": false, "schema": {"type": "array", "oneOf": [{"minItems": 4, "maxItems": 4}, {"minItems": 6, "maxItems": 6}], "items": {"type": "number"}}, "style": "form", "explode": false}, "datetime": {"name": "datetime", "in": "query", "description": "Either a date-time or an interval, open or closed. Date and time\nexpressions adhere to RFC 3339. Open intervals are expressed using\ndouble-dots.\n\nExamples:\n\n* A date-time: \"2018-02-12T23:20:50Z\"\n* A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n* Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\nOnly records that have a temporal property that intersects the value of\n`datetime` are selected.  It is left to the decision of the server\nwhether only a single temporal property is used to determine the extent\nor all relevant temporal properties.", "required": false, "schema": {"type": "string"}, "style": "form", "explode": false}, "limit": {"name": "limit", "in": "query", "description": "The optional limit parameter limits the number of items that are\npresented in the response document. Only items are counted that\nare on the first level of the collection in the response document.\nNested objects contained within the explicitly requested items\nshall not be counted.", "required": false, "schema": {"type": "integer", "minimum": 1, "maximum": 10000, "default": 10}, "style": "form", "explode": false}, "q": {"name": "q", "in": "query", "description": "The optional q parameter supports keyword searching.  Only records\nwhose text fields contain one or more of the specified search terms\nare selected.  The specific set of text keys/fields/properties of a\nrecord to which the q operator is applied is up to the description\nof the server.   Implementations should, however, apply the q\noperator to the title, description and keywords keys/fields/properties.", "required": false, "schema": {"type": "array", "items": {"type": "string"}}, "explode": false, "style": "form"}, "type": {"name": "type", "in": "query", "description": "The optional type parameter supports searching by resource type.  Only\nrecords whose type, as indicated by the value of the type core\nqueryable, is equal to one of the listed values shall be selected.", "required": false, "schema": {"type": "array", "items": {"type": "string"}}, "explode": false, "style": "form"}, "externalId": {"name": "externalId", "in": "query", "description": "The optional externalId parameter supports searching by an identifier\nthat was not assigned by the catalogue (i.e. an external identifier).\nOnly records with an external identifer, as indicated by the value of\nthe externalId core queryable array, that is equal to one of the listed\nvalues shall be selected.", "required": false, "schema": {"type": "array", "items": {"type": "string"}}, "explode": false, "style": "form"}, "sortby": {"name": "sortby", "in": "query", "required": false, "schema": {"type": "array", "minItems": 1, "items": {"type": "string", "pattern": "[+|-][A-Za-z_][A-Za-z_0-9]*"}}, "style": "form", "explode": false}, "collectionId": {"name": "collectionId", "in": "path", "description": "local identifier of a collection", "required": true, "schema": {"type": "string"}}, "recordId": {"name": "recordId", "in": "path", "description": "local identifier of a record", "required": true, "schema": {"type": "string"}}, "f": {"name": "f", "in": "query", "description": "Optional output formats", "required": false, "schema": {"type": "string", "enum": ["json", "html"], "default": "json"}, "style": "form", "explode": false}, "offset": {"name": "offset", "in": "query", "description": "The optional offset parameter indicates the index within the result set from which the server shall begin presenting results in the response document.  The first element has an index of 0 (default).", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0}, "style": "form", "explode": false}, "filter": {"name": "filter", "in": "query", "description": "The optional filter parameter specifies a CQL2 expression to be used for enhanced filtering", "required": false, "schema": {"type": "object"}, "style": "form", "explode": false}, "filter-lang": {"name": "filter-lang", "in": "query", "description": "The optional filter-lang parameter specifies the predicate language of the filter being applied", "required": false, "schema": {"type": "string", "enum": ["cql2-json", "cql2-text"], "default": "cql2-text"}, "style": "form", "explode": false}, "vendorSpecificParameters": {"name": "vendorSpecificParameters", "in": "query", "description": "Additional \"free-form\" parameters that are not explicitly defined", "schema": {"type": "object", "additionalProperties": true}, "style": "form"}, "facets": {"name": "facets", "in": "query", "description": "Whether to include facets in results", "schema": {"type": "boolean", "default": false}, "style": "form", "explode": false}, "distributed": {"name": "distributed", "in": "query", "description": "Whether to invoke distributed mode", "schema": {"type": "boolean", "default": false}, "style": "form", "explode": false}, "ids": {"name": "ids", "in": "query", "description": "Comma-separated list of identifiers", "required": false, "schema": {"type": "array", "items": {"type": "string"}}, "style": "form", "explode": false}}, "schemas": {"collectionInfo": {"type": "object", "required": ["id", "links"], "properties": {"id": {"description": "identifier of the collection used, for example, in URIs", "type": "string"}, "title": {"description": "human readable title of the collection", "type": "string"}, "description": {"description": "a description of the records in the collection", "type": "string"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/link"}}, "extent": {"$ref": "#/components/schemas/extent"}, "itemType": {"description": "indicator about the type of the items in the collection (the\ndefault value is 'record' for OAPIR).", "type": "string", "default": "record"}, "crs": {"description": "the list of coordinate reference systems supported by the service", "type": "array", "items": {"type": "string"}, "default": ["http://www.opengis.net/def/crs/OGC/1.3/CRS84"]}}}, "collections": {"type": "object", "required": ["links", "collections"], "properties": {"links": {"type": "array", "items": {"$ref": "#/components/schemas/link"}}, "collections": {"type": "array", "items": {"$ref": "#/components/schemas/collectionInfo"}}}}, "confClasses": {"type": "object", "required": ["conformsTo"], "properties": {"conformsTo": {"type": "array", "items": {"type": "string"}}}}, "exception": {"type": "object", "description": "information about the exception; an error code plus an optional\ndescription.", "required": ["code"], "properties": {"code": {"type": "string"}, "description": {"type": "string"}}}, "extent": {"type": "object", "description": "The extent of the records in the collection. In the Core only spatial\nand temporal extents are specified. Extensions may add additional\nmembers to represent other extents, for example, thermal or pressure\nranges.", "properties": {"spatial": {"description": "The spatial extent of the records in the collection.", "type": "object", "properties": {"bbox": {"description": "One or more bounding boxes that describe the spatial extent of\nthe dataset. In the Core only a single bounding box is\nsupported. Extensions may support additional areas. If multiple\nareas are provided, the union of the bounding boxes describes\nthe spatial extent.", "type": "array", "minItems": 1, "items": {"description": "Each bounding box is provided as four or six numbers,\ndepending on whether the coordinate reference system\nincludes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1\n* Lower left corner, coordinate axis 2\n* Minimum value, coordinate axis 3 (optional)\n* Upper right corner, coordinate axis 1\n* Upper right corner, coordinate axis 2\n* Maximum value, coordinate axis 3 (optional)\n\nThe coordinate reference system of the values is WGS 84\nlong/lat (http://www.opengis.net/def/crs/OGC/1.3/CRS84)\nunless a different coordinate reference system is specified\nin `crs`.\n\nFor WGS 84 longitude/latitude the values are in most cases\nthe sequence of minimum longitude, minimum latitude, maximum\nlongitude and maximum latitude. However, in cases where the\nbox spans the antimeridian the first value (west-most box\nedge) is larger than the third value (east-most box edge).\n\nIf the vertical axis is included, the third and the sixth\nnumber are the bottom and the top of the 3-dimensional\nbounding box.\n\nIf a record has multiple spatial geometry properties, it is\nthe decision of the server whether only a single spatial\ngeometry property is used to determine the extent or all\nrelevant geometries.", "type": "array", "oneOf": [{"minItems": 4, "maxItems": 4}, {"minItems": 6, "maxItems": 6}], "items": {"type": "number"}, "example": [-180, -90, 180, 90]}}, "crs": {"description": "Coordinate reference system of the coordinates in the spatial\nextent (property `bbox`). The default reference system is WGS\n84 longitude/latitude. In the Core this is the only supported\ncoordinate reference system. Extensions may support additional\ncoordinate reference systems and add additional enum values.", "type": "string", "enum": ["http://www.opengis.net/def/crs/OGC/1.3/CRS84"], "default": "http://www.opengis.net/def/crs/OGC/1.3/CRS84"}}}, "temporal": {"description": "The temporal extent of the records in the collection.", "type": "object", "properties": {"interval": {"description": "One or more time intervals that describe the temporal extent of\nthe dataset. The value `null` is supported and indicates an\nopen time interval. In the Core only a single time interval is\nsupported. Extensions may support multiple intervals. If\nmultiple intervals are provided, the union of the intervals\ndescribes the temporal extent.", "type": "array", "minItems": 1, "items": {"description": "Begin and end times of the time interval. The timestamps are\nin the temporal coordinate reference system specified in\n`trs`. By default this is the Gregorian calendar.", "type": "array", "minItems": 2, "maxItems": 2, "items": {"type": "string", "format": "date-time", "nullable": true}, "example": ["2011-11-11T12:22:11Z", null]}}, "trs": {"description": "Coordinate reference system of the coordinates in the temporal\nextent (property `interval`). The default reference system is\nthe Gregorian calendar. In the Core this is the only supported\ntemporal coordinate reference system. Extensions may support\nadditional temporal coordinate reference systems and add\nadditional enum values.", "type": "string", "enum": ["http://www.opengis.net/def/uom/ISO-8601/0/Gregorian"], "default": "http://www.opengis.net/def/uom/ISO-8601/0/Gregorian"}}}}}, "featureCollectionGeoJSON": {"type": "object", "required": ["type", "features"], "properties": {"type": {"type": "string", "enum": ["FeatureCollection"]}, "features": {"type": "array", "items": {"$ref": "#/components/schemas/recordGeoJSON"}}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/link"}}, "timeStamp": {"$ref": "#/components/schemas/timeStamp"}, "numberMatched": {"$ref": "#/components/schemas/numberMatched"}, "numberReturned": {"$ref": "#/components/schemas/numberReturned"}}}, "recordGeoJSON": {"type": "object", "required": ["id", "type", "geometry", "properties"], "properties": {"id": {"type": "string", "description": "A unique identifier of the catalogue record.", "format": "uri"}, "type": {"type": "string", "enum": ["Feature"]}, "geometry": {"$ref": "#/components/schemas/geometryGeoJSON"}, "properties": {"type": "object", "required": ["type", "title"], "properties": {"recordCreated": {"type": "string", "description": "Date of creation of this record.", "format": "date-time"}, "recordUpdated": {"type": "string", "description": "The most recent date on which the record was changed.", "format": "date-time"}, "type": {"type": "string", "description": "The nature or genre of the resource.", "format": "uri"}, "title": {"type": "string", "description": "A human-readable name given to the resource."}, "description": {"type": "string", "description": "A free-text account of the resource."}, "keywords": {"type": "array", "description": "The topic or topics of the resource. Typically represented\nusing keywords, tags, key phrases, or classification codes.\nRecommended best practice is to use a controlled vocabulary.", "items": {"type": "string"}}, "keywordsCodespace": {"type": "string", "description": "A reference to a controlled vocabulary used for the keywords.", "format": "uri"}, "language": {"type": "string", "description": "The natural language used for textual values (e.g. titles,\ndescriptions, etc.) of the resource. ISO 639-1/639-2 codes\nshould be used.", "default": "en"}, "externalId": {"type": "array", "description": "An identifier for the resource assigned by an external (to\nthe catalogue) entity.", "items": {"type": "string"}}, "created": {"type": "string", "description": "Date of creation of the resource.", "format": "date-time"}, "updated": {"type": "string", "description": "Most recent date on which the resource was changed.", "format": "date-time"}, "publisher": {"type": "string", "description": "Link to the entity making the resource available. Recommended\nbest practice is to use a VCard\n(see http://www.w3.org/TR/vcard-rdf/).", "format": "uri"}, "themes": {"type": "array", "description": "A knowledge organization system used to classify the resource.", "items": {"type": "object", "properties": {"scheme": {"type": "string", "description": "An identifier for the knowledge organization system used\nto classify the resource.  It is recommended that the\nidentifier by a resolvable URI."}, "concepts": {"type": "array", "description": "One or more entity/concept identifers from this\nknowledge system. it is recommended that a resolvable\nURI be used for each entity/concept identifier.", "items": {"type": "string"}}}}}, "formats": {"type": "array", "description": "A list of available distributions of the resource.", "items": {"type": "string"}}, "contactPoint": {"type": "string", "description": "Link to relevant contact information.  Recommended best\npractice is to use a VCard\n(see http://www.w3.org/TR/vcard-rdf/).", "format": "uri"}, "license": {"type": "string", "description": "A legal document under which the resource is made available.", "format": "uri"}, "rights": {"type": "string", "description": "A statement that concerns all rights not addresses by the\nlicense such as a copyright statement."}, "extent": {"$ref": "#/components/schemas/extent"}, "associations": {"type": "array", "description": "A list of links for accessing the resource (e.g. download\nlink, access link) in one of the supported distribution\nformats and/or links to other resources associated with\nthis resource.", "items": {"$ref": "#/components/schemas/link"}}}, "additionalProperties": true}, "links": {"type": "array", "description": "A list of links for navigating the API (e.g. prev, next, etc.).", "items": {"$ref": "#/components/schemas/link"}}}}, "geometryGeoJSON": {"oneOf": [{"$ref": "#/components/schemas/pointGeoJSON"}, {"$ref": "#/components/schemas/multipointGeoJSON"}, {"$ref": "#/components/schemas/linestringGeoJSON"}, {"$ref": "#/components/schemas/multilinestringGeoJSON"}, {"$ref": "#/components/schemas/polygonGeoJSON"}, {"$ref": "#/components/schemas/multipolygonGeoJSON"}, {"$ref": "#/components/schemas/geometrycollectionGeoJSON"}]}, "geometrycollectionGeoJSON": {"type": "object", "required": ["type", "geometries"], "properties": {"type": {"type": "string", "enum": ["GeometryCollection"]}, "geometries": {"type": "array", "items": {"$ref": "#/components/schemas/geometryGeoJSON"}}}}, "landingPage": {"type": "object", "required": ["links"], "properties": {"title": {"type": "string"}, "description": {"type": "string"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/link"}}}}, "linestringGeoJSON": {"type": "object", "required": ["type", "coordinates"], "properties": {"type": {"type": "string", "enum": ["LineString"]}, "coordinates": {"type": "array", "minItems": 2, "items": {"type": "array", "minItems": 2, "items": {"type": "number"}}}}}, "link": {"type": "object", "required": ["href"], "properties": {"href": {"type": "string"}, "rel": {"type": "string"}, "type": {"type": "string"}, "hreflang": {"type": "string"}, "title": {"type": "string"}, "length": {"type": "integer"}}}, "multilinestringGeoJSON": {"type": "object", "required": ["type", "coordinates"], "properties": {"type": {"type": "string", "enum": ["MultiLineString"]}, "coordinates": {"type": "array", "items": {"type": "array", "minItems": 2, "items": {"type": "array", "minItems": 2, "items": {"type": "number"}}}}}}, "multipointGeoJSON": {"type": "object", "required": ["type", "coordinates"], "properties": {"type": {"type": "string", "enum": ["MultiPoint"]}, "coordinates": {"type": "array", "items": {"type": "array", "minItems": 2, "items": {"type": "number"}}}}}, "multipolygonGeoJSON": {"type": "object", "required": ["type", "coordinates"], "properties": {"type": {"type": "string", "enum": ["MultiPolygon"]}, "coordinates": {"type": "array", "items": {"type": "array", "items": {"type": "array", "minItems": 4, "items": {"type": "array", "minItems": 2, "items": {"type": "number"}}}}}}}, "numberMatched": {"description": "The number of records of the record type that match the selection\nparameters like `bbox`.", "type": "integer", "minimum": 0}, "numberReturned": {"description": "The number of records in the record collection.\n\nA server may omit this information in a response, if the information\nabout the number of records is not known or difficult to compute.\n\nIf the value is provided, the value shall be identical to the number\nof items in the \"records\" array.", "type": "integer", "minimum": 0}, "pointGeoJSON": {"type": "object", "required": ["type", "coordinates"], "properties": {"type": {"type": "string", "enum": ["Point"]}, "coordinates": {"type": "array", "minItems": 2, "items": {"type": "number"}}}}, "polygonGeoJSON": {"type": "object", "required": ["type", "coordinates"], "properties": {"type": {"type": "string", "enum": ["Polygon"]}, "coordinates": {"type": "array", "items": {"type": "array", "minItems": 4, "items": {"type": "array", "minItems": 2, "items": {"type": "number"}}}}}}, "sortable": {"type": "object", "required": ["id"], "properties": {"id": {"description": "the identifier/name for the sortable", "type": "string"}, "title": {"description": "a human readable title for the sortable", "type": "string"}, "description": {"description": "a human-readable narrative describing the sortable", "type": "string"}, "language": {"description": "the language used for the title and description", "type": "string"}, "links": {"type": "array", "items": {"$ref": "#/components/schemas/link"}}}}, "timeStamp": {"description": "This property indicates the time and date when the response was\ngenerated.", "type": "string", "format": "date-time", "example": "2017-08-17T08:05:32Z"}, "queryable": {"properties": {"description": {"description": "a human-readable narrative describing the queryable", "type": "string"}, "language": {"default": ["en"], "description": "the language used for the title and description", "type": "string"}, "queryable": {"description": "the token that may be used in a CQL predicate", "type": "string"}, "title": {"description": "a human readable title for the queryable", "type": "string"}, "type": {"description": "the data type of the queryable", "type": "string"}, "type-ref": {"description": "a reference to the formal definition of the type", "format": "url", "type": "string"}}, "required": ["queryable", "type"], "type": "object"}, "queryables": {"properties": {"queryables": {"items": {"$ref": "#/components/schemas/queryable"}, "type": "array"}}, "required": ["queryables"], "type": "object"}}, "responses": {"LandingPage": {"description": "The landing page provides links to the API definition\n(link relations `service-desc` and `service-doc`),\nthe Conformance declaration (path `/conformance`,\nlink relation `conformance`), and the Record\nCollections (path `/collections`, link relation\n`data`).", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/landingPage"}}, "text/html": {"schema": {"type": "string"}}}}, "ConformanceDeclaration": {"description": "The URIs of all conformance classes supported by the server.\n\nTo support \"generic\" clients that want to access multiple\nOGC API Records implementations - and not \"just\" a specific\nAPI / server, the server declares the conformance\nclasses it implements and conforms to.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/confClasses"}}, "text/html": {"schema": {"type": "string"}}}}, "Collections": {"description": "The record collections shared by this API.\n\nCatalogues are organized as one or more record collections. This\nresource provides information about and access to these collections.\n\nThe response contains the list of record collections (itemType=record).\nFor each record collection, a link to the items in the collection\n(path `/collections/{collectionId}/items`, link relation `items`) as\nwell as key information about the collection. This information\nincludes...\n\n* A local identifier for the collection that is unique for the +\n  catalogue;\n* A list of coordinate reference systems (CRS) in which geometries +\n  may be returned by the server. The first CRS is the default +\n  coordinate reference system (the default is always WGS 84 with axis +\n  order longitude/latitude);\n* An optional title and description for the collection;\n* An optional extent that can be used to provide an indication of the +\n  spatial and temporal extent of the collection - typically derived +\n  from the data;\n* An optional indicator about the type of the items in the collection +\n  (the default value, if the indicator is not provided, is 'record').", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/collections"}}, "text/html": {"schema": {"type": "string"}}}}, "Collection": {"description": "Information about the record collection with id `collectionId`.\n\nThe response contains a link to the items in the collection\n(path `/collections/{collectionId}/items`, link relation `items`)\nas well as key information about the collection. This information\nincludes:\n\n* A local identifier for the collection that is unique for the +\n  catalogue;\n* A list of coordinate reference systems (CRS) in which geometries +\n  may be returned by the server. The first CRS is the default +\n  coordinate reference system (the default is always WGS 84 with +\n  axis order longitude/latitude);\n* An optional title and description for the collection;\n* An optional extent that can be used to provide an indication of +\n  the spatial and temporal extent of the collection - typically +\n  derived from the data;\n* An optional indicator about the type of the items in the collection +\n  (the default value, if the indicator is not provided, is 'record').", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/collectionInfo"}}, "text/html": {"schema": {"type": "string"}}}}, "Records": {"description": "The response is a document consisting of records in the collection.\nThe records included in the response are determined by the server\nbased on the query parameters of the request. To support access to\nlarger collections without overloading the client, the API supports\npaged access with links to the next page, if more records are selected\nthat the page size.\n\nThe `bbox` and `datetime` parameter can be used to select only a\nsubset of the records in the collection (the records that are in the\nbounding box or time interval). The `bbox` parameter matches all records\nin the collection that are not associated with a location, too. The\n`datetime` parameter matches all records in the collection that are\nnot associated with a time stamp or interval, too.\n\nThe `limit` parameter may be used to control the subset of the\nselected records that should be returned in the response, the page size.\nEach page may include information about the number of selected and\nreturned records (`numberMatched` and `numberReturned`) as well as\nlinks to support paging (link relation `next`).\n\nThe XML representation of the response document is an ATOM feed.", "content": {"application/geo+json": {"schema": {"$ref": "#/components/schemas/featureCollectionGeoJSON"}}, "text/html": {"schema": {"type": "string"}}, "application/atom+xml": {"schema": {"type": "string"}}}}, "Record": {"description": "Fetch the record with id `recordId` in the record collection\nwith id `collectionId`.  The XML representation of a record\nis an ATOM entry.", "content": {"application/geo+json": {"schema": {"$ref": "#/components/schemas/recordGeoJSON"}}, "text/html": {"schema": {"type": "string"}}, "application/atom+xml": {"schema": {"type": "string"}}}}, "Sortables": {"type": "array", "items": {"$ref": "#/components/schemas/sortable"}}, "OpenSearchDescriptionDocument": {"description": "description document for OpenSearch clients", "content": {"application/opensearchdescription+xml": {"schema": {"type": "string"}}}}, "InvalidParameter": {"description": "A query parameter has an invalid value.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/exception"}}, "text/html": {"schema": {"type": "string"}}}}, "NotFound": {"description": "The requested resource does not exist on the server. For example,\na path parameter had an incorrect value."}, "NotAcceptable": {"description": "Content negotiation failed. For example, the `Accept` header submitted\nin the request did not support any of the media types supported by the\nserver for the requested resource."}, "ServerError": {"description": "A server error occurred.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/exception"}}, "text/html": {"schema": {"type": "string"}}}}, "Queryables": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/queryables"}}}, "description": "successful queryables operation"}}}, "tags": [{"name": "Capabilities", "description": "essential characteristics of this API"}, {"name": "Metadata", "description": "access to metadata (records)"}], "servers": [{"url": "https://soilwise-he.containers.wur.nl/cat", "description": "SoilWise will provide an integrated and actionable access point to scattered and heterogeneous soil data and knowledge in Europe, making them FAIR (Findable, Accessible, Interoperable and Reusable) and improve trust, willingness, and ability to share and re-use soil data and knowledge. In three project development cycles, co-creation and co-validation by multi-stakeholder groups are the centre of project activities. SoilWise recognises existing workflows and repositories for specific user needs and aims to work with them to enhance their discoverability, approachability and interconnection. An open, modular, scalable and extensible knowledge and data repository building on existing and new technologies will be provided while respecting data ownership, access policies and privacy. AI- and ML- techniques will be employed to interlink scattered data and knowledge, automatise the processes, infer new knowledge and increase FAIRness. SoilWise applies infrastructure thinking instead of project thinking to design a repository for at least a decade to support EUSO evolvement accordingly. <br><br>This is an early prototype of the repository, deployed with the goal to generate feedback to improve the software and content in upcoming iterations. Please provide your feedback via <a href='https://github.com/soilwise-he/dashboard/discussions/categories/q-a'>Github</a>"}], "paths": {"/": {"get": {"tags": ["Capabilities"], "summary": "Landing page", "description": "Landing page", "operationId": "getLandingPage", "parameters": [{"$ref": "#/components/parameters/f"}], "responses": {"200": {"$ref": "#/components/responses/Queryables"}, "500": {"$ref": "#/components/responses/ServerError"}}}}, "/conformance": {"get": {"tags": ["Capabilities"], "summary": "Conformance page", "description": "Conformance page", "operationId": "getConformanceDeclaration", "parameters": [{"$ref": "#/components/parameters/f"}], "responses": {"200": {"$ref": "#/components/responses/ConformanceDeclaration"}, "500": {"$ref": "#/components/responses/ServerError"}}}}, "/collections": {"get": {"tags": ["Capabilities"], "summary": "Collections page", "description": "Collections page", "operationId": "getCollections", "parameters": [{"$ref": "#/components/parameters/f"}], "responses": {"200": {"$ref": "#/components/responses/Collections"}, "500": {"$ref": "#/components/responses/ServerError"}}}}, "/collections/{collectionId}": {"get": {"tags": ["Capabilities"], "summary": "Collection page", "description": "Collection page", "operationId": "getCollectionId", "parameters": [{"$ref": "#/components/parameters/collectionId"}, {"$ref": "#/components/parameters/f"}], "responses": {"200": {"$ref": "#/components/responses/Collection"}, "404": {"$ref": "#/components/responses/NotFound"}, "500": {"$ref": "#/components/responses/ServerError"}}}}, "/queryables": {"get": {"tags": ["Queryables"], "summary": "Queryables page", "description": "Queryables page", "operationId": "getQueryables", "parameters": [{"$ref": "#/components/parameters/f"}], "responses": {"200": {"$ref": "#/components/responses/Queryables"}, "500": {"$ref": "#/components/responses/ServerError"}}}}, "/collections/{collectionId}/queryables": {"get": {"tags": ["Queryables"], "summary": "Queryables page", "description": "Queryables page", "operationId": "getCollectionQueryables", "parameters": [{"$ref": "#/components/parameters/f"}, {"$ref": "#/components/parameters/collectionId"}], "responses": {"200": {"$ref": "#/components/responses/Queryables"}, "500": {"$ref": "#/components/responses/ServerError"}, "404": {"$ref": "#/components/responses/NotFound"}}}}, "/collections/{collectionId}/items": {"get": {"tags": ["metadata"], "summary": "Records search items page", "description": "Records search items page", "operationId": "getRecords", "parameters": [{"$ref": "#/components/parameters/collectionId"}, {"$ref": "#/components/parameters/bbox"}, {"$ref": "#/components/parameters/ids"}, {"$ref": "#/components/parameters/datetime"}, {"$ref": "#/components/parameters/limit"}, {"$ref": "#/components/parameters/q"}, {"$ref": "#/components/parameters/type"}, {"$ref": "#/components/parameters/externalId"}, {"$ref": "#/components/parameters/sortby"}, {"$ref": "#/components/parameters/filter"}, {"$ref": "#/components/parameters/filter-lang"}, {"$ref": "#/components/parameters/f"}, {"$ref": "#/components/parameters/offset"}, {"$ref": "#/components/parameters/facets"}, {"$ref": "#/components/parameters/distributed"}, {"$ref": "#/components/parameters/vendorSpecificParameters"}], "responses": {"200": {"$ref": "#/components/responses/Records"}, "400": {"$ref": "#/components/responses/InvalidParameter"}, "404": {"$ref": "#/components/responses/NotFound"}, "500": {"$ref": "#/components/responses/ServerError"}}}}, "/collections/{collectionId}/items/{recordId}": {"get": {"tags": ["metadata"], "summary": "Records item page", "description": "Records item page", "operationId": "getRecord", "parameters": [{"$ref": "#/components/parameters/collectionId"}, {"$ref": "#/components/parameters/recordId"}, {"$ref": "#/components/parameters/distributed"}, {"name": "f", "in": "query", "description": "Optional output formats", "required": false, "schema": {"type": "string", "enum": ["json", "html", "xml"], "default": "json"}, "style": "form", "explode": false}], "responses": {"200": {"$ref": "#/components/responses/Record"}, "404": {"$ref": "#/components/responses/NotFound"}, "500": {"$ref": "#/components/responses/ServerError"}}}}}}